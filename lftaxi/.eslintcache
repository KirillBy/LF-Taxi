[{"/home/kirill/LF-Taxi/lftaxi/src/index.jsx":"1","/home/kirill/LF-Taxi/lftaxi/src/store/store.jsx":"2","/home/kirill/LF-Taxi/lftaxi/src/components/app/index.jsx":"3","/home/kirill/LF-Taxi/lftaxi/src/saga/authSaga.jsx":"4","/home/kirill/LF-Taxi/lftaxi/src/saga/registrationSaga.jsx":"5","/home/kirill/LF-Taxi/lftaxi/src/saga/addressSaga.jsx":"6","/home/kirill/LF-Taxi/lftaxi/src/saga/paymentSaga.jsx":"7","/home/kirill/LF-Taxi/lftaxi/src/saga/routeSaga.jsx":"8","/home/kirill/LF-Taxi/lftaxi/src/reducers/index.jsx":"9","/home/kirill/LF-Taxi/lftaxi/src/components/app/app.jsx":"10","/home/kirill/LF-Taxi/lftaxi/src/actions/user.jsx":"11","/home/kirill/LF-Taxi/lftaxi/src/actions/address.jsx":"12","/home/kirill/LF-Taxi/lftaxi/src/actions/card.jsx":"13","/home/kirill/LF-Taxi/lftaxi/src/actions/login.jsx":"14","/home/kirill/LF-Taxi/lftaxi/src/api/api.jsx":"15","/home/kirill/LF-Taxi/lftaxi/src/reducers/user.jsx":"16","/home/kirill/LF-Taxi/lftaxi/src/reducers/auth.jsx":"17","/home/kirill/LF-Taxi/lftaxi/src/reducers/addresses.jsx":"18","/home/kirill/LF-Taxi/lftaxi/src/reducers/card.jsx":"19","/home/kirill/LF-Taxi/lftaxi/src/private-route.jsx":"20","/home/kirill/LF-Taxi/lftaxi/src/components/profile/index.jsx":"21","/home/kirill/LF-Taxi/lftaxi/src/components/login/index.jsx":"22","/home/kirill/LF-Taxi/lftaxi/src/components/map/index.jsx":"23","/home/kirill/LF-Taxi/lftaxi/src/components/app-header/index.jsx":"24","/home/kirill/LF-Taxi/lftaxi/src/components/profile/profile.jsx":"25","/home/kirill/LF-Taxi/lftaxi/src/components/login/login.jsx":"26","/home/kirill/LF-Taxi/lftaxi/src/components/app-header/app-header.jsx":"27","/home/kirill/LF-Taxi/lftaxi/src/components/map/map.jsx":"28","/home/kirill/LF-Taxi/lftaxi/src/components/card-form/index.jsx":"29","/home/kirill/LF-Taxi/lftaxi/src/components/registration-form/index.jsx":"30","/home/kirill/LF-Taxi/lftaxi/src/components/login-form/index.jsx":"31","/home/kirill/LF-Taxi/lftaxi/src/components/order-form/index.jsx":"32","/home/kirill/LF-Taxi/lftaxi/src/components/login-form/login-form.jsx":"33","/home/kirill/LF-Taxi/lftaxi/src/components/order-form/order-form.jsx":"34","/home/kirill/LF-Taxi/lftaxi/src/components/registration-form/registration-form.jsx":"35","/home/kirill/LF-Taxi/lftaxi/src/components/card-form/card-form.jsx":"36","/home/kirill/LF-Taxi/lftaxi/src/helpers/regex.jsx":"37"},{"size":392,"mtime":1610869681203,"results":"38","hashOfConfig":"39"},{"size":731,"mtime":1611260624044,"results":"40","hashOfConfig":"39"},{"size":43,"mtime":1608909901781,"results":"41","hashOfConfig":"39"},{"size":501,"mtime":1611166756800,"results":"42","hashOfConfig":"39"},{"size":507,"mtime":1611165553917,"results":"43","hashOfConfig":"39"},{"size":442,"mtime":1611251924237,"results":"44","hashOfConfig":"39"},{"size":1675,"mtime":1611250443336,"results":"45","hashOfConfig":"39"},{"size":472,"mtime":1611386105288,"results":"46","hashOfConfig":"39"},{"size":225,"mtime":1611165125617,"results":"47","hashOfConfig":"39"},{"size":915,"mtime":1610869681199,"results":"48","hashOfConfig":"39"},{"size":262,"mtime":1610887148110,"results":"49","hashOfConfig":"39"},{"size":267,"mtime":1611260624044,"results":"50","hashOfConfig":"39"},{"size":564,"mtime":1611250354123,"results":"51","hashOfConfig":"39"},{"size":317,"mtime":1610869681195,"results":"52","hashOfConfig":"39"},{"size":1860,"mtime":1611260394831,"results":"53","hashOfConfig":"39"},{"size":311,"mtime":1610869681203,"results":"54","hashOfConfig":"39"},{"size":376,"mtime":1610869681203,"results":"55","hashOfConfig":"39"},{"size":467,"mtime":1611260624044,"results":"56","hashOfConfig":"39"},{"size":1146,"mtime":1611250354123,"results":"57","hashOfConfig":"39"},{"size":424,"mtime":1610869681203,"results":"58","hashOfConfig":"39"},{"size":56,"mtime":1608909901781,"results":"59","hashOfConfig":"39"},{"size":50,"mtime":1608909901781,"results":"60","hashOfConfig":"39"},{"size":44,"mtime":1608909901781,"results":"61","hashOfConfig":"39"},{"size":63,"mtime":1608909901781,"results":"62","hashOfConfig":"39"},{"size":353,"mtime":1610869681199,"results":"63","hashOfConfig":"39"},{"size":1069,"mtime":1610869681199,"results":"64","hashOfConfig":"39"},{"size":1220,"mtime":1611166862853,"results":"65","hashOfConfig":"39"},{"size":1898,"mtime":1611386105288,"results":"66","hashOfConfig":"39"},{"size":60,"mtime":1610869681199,"results":"67","hashOfConfig":"39"},{"size":84,"mtime":1608909901781,"results":"68","hashOfConfig":"39"},{"size":63,"mtime":1608909901781,"results":"69","hashOfConfig":"39"},{"size":63,"mtime":1610996576216,"results":"70","hashOfConfig":"39"},{"size":4864,"mtime":1611675715220,"results":"71","hashOfConfig":"39"},{"size":5128,"mtime":1611261476278,"results":"72","hashOfConfig":"39"},{"size":5433,"mtime":1610995748716,"results":"73","hashOfConfig":"39"},{"size":8167,"mtime":1611769477254,"results":"74","hashOfConfig":"39"},{"size":237,"mtime":1611677659864,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"rqbl6c",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},"/home/kirill/LF-Taxi/lftaxi/src/index.jsx",[],["162","163"],"/home/kirill/LF-Taxi/lftaxi/src/store/store.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/app/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/saga/authSaga.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/saga/registrationSaga.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/saga/addressSaga.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/saga/paymentSaga.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/saga/routeSaga.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/reducers/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/app/app.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/actions/user.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/actions/address.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/actions/card.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/actions/login.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/api/api.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/reducers/user.jsx",["164"],"import {ADD_USER_CARD } from '../actions/user'\n\nconst initialState = {\n    userCard: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_USER_CARD : {\n            return {userCard: action.payload}\n        }\n        default:\n            return state\n    }\n}","/home/kirill/LF-Taxi/lftaxi/src/reducers/auth.jsx",["165"],"import {LOG_IN, LOG_OUT } from '../actions/login'\n\nconst initialState = {\n    isLoggedIn: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case LOG_IN : {\n            return {isLoggedIn: true}\n        }\n        case LOG_OUT : {\n            return {isLoggedIn: false}\n        }\n        default:\n            return state\n    }\n}","/home/kirill/LF-Taxi/lftaxi/src/reducers/addresses.jsx",["166"],"import {addRoute, addAddresses} from '../actions/address'\n\nconst initialState = {\n    listAddresses: null,\n    route: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case addAddresses.toString(): {\n            return {...state, listAddresses: action.payload}\n        }\n        case addRoute.toString(): {\n            return {...state, route: action.payload}\n        }\n        default:\n            return state\n    }\n}","/home/kirill/LF-Taxi/lftaxi/src/reducers/card.jsx",["167"],"import {registerCardStart, registerCardError,\n    setCardData, getCardDataStart, getCardDataError, setCardUpdated } from \"../actions/card\";\n\nconst initialState = {\n    cardNumber: '',\n    cardName: '',\n    cvc: '',\n    expiryDate: '',\n    error: null,\n    loading: false,\n    isUpdated: false,\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case getCardDataStart.toString(): {\n            return {...state, loading: true, error: null}\n        }\n        case setCardData.toString(): {\n            return {...state, ...action.payload, loading: false, error: null}\n        }\n        case getCardDataError.toString(): {\n            return {...state, loading: false, error: action.payload.error}\n        }\n        case registerCardStart.toString(): {\n            return {...state, loading: true, error: null}\n        }\n        case registerCardError.toString(): {\n            return {...state, loading: false, error: action.payload.error}\n        }\n        case setCardUpdated.toString(): {\n            return {...state, isUpdated: true}\n        }\n    \n        default:\n            return state;\n    }\n}","/home/kirill/LF-Taxi/lftaxi/src/private-route.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/profile/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/login/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/map/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/app-header/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/profile/profile.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/login/login.jsx",["168"],"import React, { useState } from 'react';\nimport LoginForm from '../login-form';\nimport './login.css';\nimport logo from '../../assets/icon-login.png'\nimport RegistrationForm from '../registration-form';\n\n\n\nconst Login = () => {\n\n    const [loginForm, setLoginForm] = useState(true);\n    const [registrationForm, setRegistrationForm] = useState(false);\n\n    const onRegistrationForm = () => {\n        setLoginForm(false);\n        setRegistrationForm(true);\n    }\n    \n    const onLoginForm = () => {\n        setLoginForm(true);\n        setRegistrationForm(false);\n    }\n\n        return (\n        <div className=\"login-container\">\n        <div className=\"login-flex\"> \n            <div className=\"login-logo-container\"  >\n                <img className=\"login-logo\" src={logo}/>\n            </div>\n            <div>\n            {loginForm && <LoginForm  onRegistrationForm={onRegistrationForm}/> }\n            {registrationForm && <RegistrationForm onLoginForm={onLoginForm}/> }                \n            </div>\n        </div>\n    </div>\n    )\n\n};\n\nexport default Login;","/home/kirill/LF-Taxi/lftaxi/src/components/app-header/app-header.jsx",["169"],"import React from 'react';\nimport './app-header.css';\nimport logo from '../../assets/icon.png'\nimport {connect} from 'react-redux' \nimport {logOut} from '../../actions/login'\nimport { useHistory } from \"react-router-dom\";\n\nconst AppHeader = ( {logOut}) => {\n\n    const onExit = () => {\n        logOut();\n        localStorage.removeItem('token');\n    }\n    const history = useHistory();\n\n    return (\n        <div className=\"app-header\" >\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div>\n                        <img className=\"header-logo\" src={logo}/>\n                    </div>\n\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => history.push('/map')}>Карта</button>\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => history.push('/profile')}>Профиль</button>\n                        <button type=\"button\" className=\"btn btn-light\" onClick={onExit}>Выйти</button>\n                    </div>\n                </nav>\n        </div>\n    );\n};\n\nexport default connect(\n    null,\n    {logOut}\n)(AppHeader);","/home/kirill/LF-Taxi/lftaxi/src/components/map/map.jsx",["170","171"],"import React, {useEffect} from 'react';\nimport mapboxgl, {addLayer} from 'mapbox-gl'\nimport './map.css';\nimport OrderForm from './../order-form';\nimport {connect} from 'react-redux';\n\nconst Map = ({route}) => {\n    let map = null;\n    let mapContainer = React.createRef();\n\n    useEffect(() => {\n        mapboxgl.accessToken = \"pk.eyJ1Ijoia2lyaWxsYnkiLCJhIjoiY2tqNGdjZjQ2NW9mczJ5bGJ5aTc2YW9scSJ9.guhMigdyD6t_-REv71-4jQ\"\n\n        map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: \"mapbox://styles/mapbox/streets-v9\",\n            center: [27.5556504, 53.9029126], \n            zoom: 12,\n        })\n\n        if(route !== null){\n            drawRoute(map, route)\n        }\n\n        return () => {\n            map.remove();\n          }\n    }, [route]);\n\n    return (\n        <div className=\"map-wrapper\">\n            <div data-testid=\"map\" className=\"map\" ref={mapContainer}>\n                <div className=\"order_container\">\n                <OrderForm/>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport const drawRoute = (map, coordinates) => {\n    map.flyTo({\n      center: coordinates[0],\n      zoom: 15\n    });\n    map.on('load', function () {\n      map.addLayer({\n            id: \"route\",\n            type: \"line\",\n            source: {\n              type: \"geojson\",\n              data: {\n                type: \"Feature\",\n                properties: {},\n                geometry: {\n                  type: \"LineString\",\n                  coordinates\n                }\n              }\n            },\n            layout: {\n              \"line-join\": \"round\",\n              \"line-cap\": \"round\"\n            },\n            paint: {\n              \"line-color\": \"#ffc617\",\n              \"line-width\": 8\n            }\n        });\n      })\n  };\n\n\nexport default connect(\n    (state) => ({\n        route: state.addresses.route,\n     })\n)(Map);","/home/kirill/LF-Taxi/lftaxi/src/components/card-form/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/registration-form/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/login-form/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/order-form/index.jsx",[],"/home/kirill/LF-Taxi/lftaxi/src/components/login-form/login-form.jsx",["172"],"import React, {useState, useEffect} from 'react';\nimport './login-form.css';\nimport { Typography, Grid, TextField, makeStyles, Container, Button, Link} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux';\nimport {authenticate} from './../../actions/login';\nimport { useHistory } from \"react-router-dom\";\nimport {emailRegex} from \"./../../helpers/regex\"\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        width: '25%',\n    },\n    paper: {\n        padding: '40px'\n    }\n\n}));\n\nconst LoginForm = ({ onRegistrationForm, authenticate, isLoggedIn}) => {\n\nLoginForm.propTypes = {\n    onRegistrationForm: PropTypes.func,\n};\n\nlet history = useHistory();\n\nconst [email, setEmail] = useState('')\nconst [password, setPassword] = useState('')\nconst [emailError, setEmailError] = useState('')\nconst [passwordError, setPasswordError] = useState('')\n\nuseEffect(() => {\n    if(isLoggedIn)\n    {\n        history.push(\"/map\");\n    }\n}, [isLoggedIn])\n\n\nconst onEmailChange = (e) => {\n    setEmail(e.target.value);\n    emailValidation();\n\n  };\n\nconst emailValidation = () => {\n    if (emailRegex.test(email)) {\n        setEmailError('');\n      } else {\n        setEmailError('Invalid email format' );\n      }\n}\n\nconst passwordValidation = () => {\n    if (password.length <= 4) {\n        setPasswordError('Password must be more than 5 symbols')\n    } else {\n        setPasswordError('');\n    }  \n}  \n\nconst onPasswordChange = (e) => {\n    setPassword(e.target.value);\n    passwordValidation();\n}\n\n\nconst onSubmit = (e) => {\n     e.preventDefault();\n     authenticate(email, password);\n}\n\nconst classes = useStyles();\nreturn (\n    <React.Fragment>\n        <Container component=\"main\" maxWidth=\"xl\" style={{backgroundColor:\"white\"}}>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    Войти\n                </Typography>\n                <div className=\"registration-row\">\n                    <Typography component=\"p\" className=\"new-user\">\n                        Новый пользователь? \n                    </Typography>\n                    <br/>\n                    <Link href=\"#\" onClick={onRegistrationForm}>\n                        Зарегистрируйтесь\n                    </Link>\n                </div>\n                <form name=\"login\" className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                id=\"username\"\n                                label=\"Имя пользователя\"\n                                name=\"username\"\n                                onChange={onEmailChange}\n                                error ={emailError.length === 0 ? false : true }\n                                helperText={emailError}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Пароль\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={onPasswordChange}\n                                autoComplete=\"current-password\"\n                                error ={passwordError.length === 0 ? false : true }\n                                helperText={passwordError}\n                            />\n                        </Grid>\n                    </Grid>\n                    <div className={classes.buttons}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            className={classes.submit}\n                            style={{backgroundColor:\"orange\"}}\n                            onClick={onSubmit}\n                            disabled={passwordError.length !== 0 || emailError.length !== 0 || email.length === 0 || password.length === 0 }\n                        >\n                            Войти\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </Container>\n    </React.Fragment>\n)\n};\n\nexport default connect(\n    (state) => ({isLoggedIn: state.auth.isLoggedIn }),\n    {authenticate}\n)(LoginForm);","/home/kirill/LF-Taxi/lftaxi/src/components/order-form/order-form.jsx",["173","174","175"],"import React, {useState, useEffect} from 'react';\nimport './order-form.css';\nimport { FormControl, Grid, TextField, makeStyles, Container, Button, InputLabel, Select, MenuItem} from \"@material-ui/core\";\nimport {connect} from 'react-redux';\nimport {getAddresses, getRoute} from './../../actions/address';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        width: '100%',\n    },\n    paper: {\n        padding: '40px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%',\n    },\n    selectEmpty: {\n    marginTop: theme.spacing(2),\n    },  \n\n}));\n\nconst OrderForm = ({getAddresses, getRoute, isLoggedIn, listAddresses}) => {\n\nlet history = useHistory();\n\nconst [startPoint, setStartPoint] = useState('')\nconst [destPoint, setDestPoint] = useState('')\nconst [startOpen, setStartOpen] = useState(false)\nconst [distOpen, setDistOpen] = useState(false)\n\nuseEffect(() => {    \n    getAddresses();\n\n}, [isLoggedIn])\n\n\nconst onStartPointChange = (e) => {\n    setStartPoint(e.target.value);\n  };\n\nconst onDestPointChange = (e) => {\n    setDestPoint(e.target.value);\n}\n\nconst handleStartClose = () => {\n    setStartOpen(false);\n  };\n\n  const handleStartOpen = () => {\n    setStartOpen(true);\n  };\n\nconst handleDistClose = () => {\n    setDistOpen(false);\n  };\n\n  const handleDistOpen = () => {\n    setDistOpen(true);\n  };\n\n\nconst onSubmit = (e) => {\n     e.preventDefault();\n    getRoute({startPoint, destPoint});\n}\n\nconst classes = useStyles();\nreturn (\n    <React.Fragment>\n        <Container component=\"main\" maxWidth=\"xl\" style={{backgroundColor:\"white\"}}>\n            <div className={classes.paper}>\n                <form name=\"login\" className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-controlled-open-select-label\">Откуда</InputLabel>\n                            {listAddresses !== null ? (\n                            <Select\n                                labelId=\"demo-controlled-open-select-label\"\n                                id=\"startPoint\"\n                                value={startPoint}\n                                open={startOpen}\n                                onClose={handleStartClose}\n                                onOpen={handleStartOpen}\n                                onChange={onStartPointChange}\n                            >                               \n                                {listAddresses.filter((name) => name !== destPoint).map((name) => (\n                                <MenuItem key={name} value={name}>\n                                    {name}\n                                </MenuItem>\n                                ))}\n\n                            </Select>) : null}\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-controlled-open-select-label\">Куда</InputLabel>\n                            {listAddresses !== null ? (\n                            <Select\n                                labelId=\"demo-controlled-open-select-label\"\n                                id=\"destPoint\"\n                                value={destPoint}\n                                open={distOpen}\n                                onClose={handleDistClose}\n                                onOpen={handleDistOpen}\n                                onChange={onDestPointChange}\n                            >\n                                {listAddresses.filter((name) => name !== startPoint).map((name) => (\n                                <MenuItem key={name} value={name}>\n                                    {name}\n                                </MenuItem>\n                                ))}\n\n                                </Select>) : null}\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.buttons}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            className={classes.submit}\n                            style={{backgroundColor:\"orange\"}}\n                            onClick={onSubmit}\n                        >\n                            Заказать\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </Container>\n    </React.Fragment>\n)\n};\n\nexport default connect(\n    (state) => ({\n        isLoggedIn: state.auth.isLoggedIn,\n        listAddresses: state.addresses.listAddresses,\n     }),\n    {getAddresses, getRoute}\n)(OrderForm);","/home/kirill/LF-Taxi/lftaxi/src/components/registration-form/registration-form.jsx",["176"],"import React, {useState, useEffect}  from 'react';\nimport './registration-form.css';\nimport { Typography, Grid, TextField, makeStyles, Container, Button, Link } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux';\nimport {addUser} from './../../actions/user';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n        width: '25%',\n    },\n    paper: {\n        padding: '40px'\n    }\n\n}));\n\nconst RegistrationForm = ({onLoginForm, addUser, isLoggedIn }) => {\n    RegistrationForm.propTypes = {\n        onLoginForm: PropTypes.func,\n    };\n\n    let history = useHistory();\n\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n    const [surname, setSurname] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        if(isLoggedIn)\n        {\n            history.push(\"/map\");\n        }\n    }, [isLoggedIn])\n\n    const onEmailChange = (e) => {\n        setEmail(e.target.value);\n    };\n    const onNameChange = (e) => {\n        setName(e.target.value);\n    };\n    const onSurnameChange = (e) => {\n        setSurname(e.target.value);\n    };\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addUser({email, password, name, surname});\n        \n   }\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: \"white\" }}>\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h4\">\n                        Регистрация\n                </Typography>\n                    <div className=\"registration-row\">\n                        <Typography component=\"p\" className=\"new-user\">\n                            Уже зарегистрированы?\n                    </Typography>\n                        <br />\n                        <Link href=\"#\" onClick={onLoginForm}>\n                            Войти\n                    </Link>\n                    </div>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"Адрес электронной почты\"\n                                    fullWidth\n                                    autoComplete=\"email\"\n                                    onChange={onEmailChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    label=\"Имя \"\n                                    fullWidth\n                                    onChange={onNameChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField \n                                required\n                                id=\"lastName\" \n                                name=\"lastName\" \n                                label=\"Фамилия\" \n                                fullWidth\n                                onChange={onSurnameChange} \n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Пароль\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={onPasswordChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        <div className={classes.buttons}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                className={classes.submit}\n                                style={{ backgroundColor: \"orange\" }}\n                                onClick={onSubmit}\n                            >\n                                Войти\n                        </Button>\n                        </div>\n                    </form>\n                </div>\n            </Container>\n        </React.Fragment>\n    )\n};\n\n\nexport default connect(\n    (state) => ({isLoggedIn: state.auth.isLoggedIn }),\n    {addUser}\n)(RegistrationForm);","/home/kirill/LF-Taxi/lftaxi/src/components/card-form/card-form.jsx",["177","178","179"],"/home/kirill/LF-Taxi/lftaxi/src/helpers/regex.jsx",["180","181"],"export const emailRegex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const cardNumberRegex = /(\\d{4}[- ]){3}\\d{4}|\\d{16}/",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":7,"column":1,"nodeType":"188","endLine":15,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":7,"column":1,"nodeType":"188","endLine":18,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":8,"column":1,"nodeType":"188","endLine":19,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":14,"column":1,"nodeType":"188","endLine":38,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":28,"column":17,"nodeType":"191","endLine":28,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":20,"column":25,"nodeType":"191","endLine":20,"endColumn":66},{"ruleId":"192","severity":1,"message":"193","line":2,"column":19,"nodeType":"194","messageId":"195","endLine":2,"endColumn":27},{"ruleId":"196","severity":1,"message":"197","line":14,"column":15,"nodeType":"198","endLine":19,"endColumn":11},{"ruleId":"196","severity":1,"message":"199","line":48,"column":4,"nodeType":"200","endLine":48,"endColumn":16,"suggestions":"201"},{"ruleId":"192","severity":1,"message":"202","line":3,"column":29,"nodeType":"194","messageId":"195","endLine":3,"endColumn":38},{"ruleId":"192","severity":1,"message":"203","line":35,"column":5,"nodeType":"194","messageId":"195","endLine":35,"endColumn":12},{"ruleId":"196","severity":1,"message":"204","line":45,"column":4,"nodeType":"200","endLine":45,"endColumn":16,"suggestions":"205"},{"ruleId":"196","severity":1,"message":"199","line":47,"column":8,"nodeType":"200","endLine":47,"endColumn":20,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":97,"column":17,"nodeType":"209","messageId":"210","endLine":97,"endColumn":56,"fix":"211"},{"ruleId":"207","severity":1,"message":"208","line":102,"column":17,"nodeType":"209","messageId":"210","endLine":102,"endColumn":35,"fix":"212"},{"ruleId":"196","severity":1,"message":"213","line":116,"column":4,"nodeType":"200","endLine":116,"endColumn":57,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":1,"column":35,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":1,"column":60,"nodeType":"217","messageId":"218","endLine":1,"endColumn":61,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'addLayer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'map' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'TextField' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAddresses'. Either include it or remove the dependency array. If 'getAddresses' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["224"],["225"],"no-useless-computed-key","Unnecessarily computed property [\"cardNumber\"] found.","Property","unnecessarilyComputedProperty",{"range":"226","text":"227"},{"range":"228","text":"227"},"React Hook useEffect has missing dependencies: 'error' and 'formValidation'. Either include them or remove the dependency array.",["229"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["230","231"],["232","233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"234","fix":"238"},[2120,2134],"\"cardNumber\"",[2267,2281],{"desc":"239","fix":"240"},{"messageId":"241","fix":"242","desc":"243"},{"messageId":"244","fix":"245","desc":"246"},{"messageId":"241","fix":"247","desc":"243"},{"messageId":"244","fix":"248","desc":"246"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"249","text":"250"},"Update the dependencies array to be: [getAddresses, isLoggedIn]",{"range":"251","text":"252"},{"range":"253","text":"250"},"Update the dependencies array to be: [getCardData, cardNumber, expiryDate, cardName, cvc, formValidation, error]",{"range":"254","text":"255"},"removeEscape",{"range":"256","text":"257"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"258","text":"259"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"260","text":"257"},{"range":"261","text":"259"},[1215,1227],"[history, isLoggedIn]",[1141,1153],"[getAddresses, isLoggedIn]",[1196,1208],[2485,2538],"[getCardData, cardNumber, expiryDate, cardName, cvc, formValidation, error]",[34,35],"",[34,34],"\\",[59,60],[59,59]]