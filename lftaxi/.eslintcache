[{"E:\\LF-Taxi\\lftaxi\\src\\index.jsx":"1","E:\\LF-Taxi\\lftaxi\\src\\store\\store.jsx":"2","E:\\LF-Taxi\\lftaxi\\src\\components\\app\\index.jsx":"3","E:\\LF-Taxi\\lftaxi\\src\\saga\\registrationSaga.jsx":"4","E:\\LF-Taxi\\lftaxi\\src\\saga\\authSaga.jsx":"5","E:\\LF-Taxi\\lftaxi\\src\\saga\\paymentSaga.jsx":"6","E:\\LF-Taxi\\lftaxi\\src\\saga\\addressSaga.jsx":"7","E:\\LF-Taxi\\lftaxi\\src\\saga\\routeSaga.jsx":"8","E:\\LF-Taxi\\lftaxi\\src\\components\\app\\app.jsx":"9","E:\\LF-Taxi\\lftaxi\\src\\reducers\\index.jsx":"10","E:\\LF-Taxi\\lftaxi\\src\\actions\\login.jsx":"11","E:\\LF-Taxi\\lftaxi\\src\\actions\\address.jsx":"12","E:\\LF-Taxi\\lftaxi\\src\\actions\\card.jsx":"13","E:\\LF-Taxi\\lftaxi\\src\\actions\\user.jsx":"14","E:\\LF-Taxi\\lftaxi\\src\\api\\api.jsx":"15","E:\\LF-Taxi\\lftaxi\\src\\reducers\\auth.jsx":"16","E:\\LF-Taxi\\lftaxi\\src\\reducers\\card.jsx":"17","E:\\LF-Taxi\\lftaxi\\src\\reducers\\addresses.jsx":"18","E:\\LF-Taxi\\lftaxi\\src\\private-route.jsx":"19","E:\\LF-Taxi\\lftaxi\\src\\reducers\\user.jsx":"20","E:\\LF-Taxi\\lftaxi\\src\\components\\profile\\index.jsx":"21","E:\\LF-Taxi\\lftaxi\\src\\components\\login\\index.jsx":"22","E:\\LF-Taxi\\lftaxi\\src\\components\\app-header\\index.jsx":"23","E:\\LF-Taxi\\lftaxi\\src\\components\\map\\index.jsx":"24","E:\\LF-Taxi\\lftaxi\\src\\components\\profile\\profile.jsx":"25","E:\\LF-Taxi\\lftaxi\\src\\components\\app-header\\app-header.jsx":"26","E:\\LF-Taxi\\lftaxi\\src\\components\\login\\login.jsx":"27","E:\\LF-Taxi\\lftaxi\\src\\components\\map\\map.jsx":"28","E:\\LF-Taxi\\lftaxi\\src\\components\\login-form\\index.jsx":"29","E:\\LF-Taxi\\lftaxi\\src\\components\\card-form\\index.jsx":"30","E:\\LF-Taxi\\lftaxi\\src\\components\\registration-form\\index.jsx":"31","E:\\LF-Taxi\\lftaxi\\src\\components\\order-form\\index.jsx":"32","E:\\LF-Taxi\\lftaxi\\src\\components\\login-form\\login-form.jsx":"33","E:\\LF-Taxi\\lftaxi\\src\\components\\registration-form\\registration-form.jsx":"34","E:\\LF-Taxi\\lftaxi\\src\\components\\order-form\\order-form.jsx":"35","E:\\LF-Taxi\\lftaxi\\src\\components\\card-form\\card-form.jsx":"36"},{"size":408,"mtime":1611304804399,"results":"37","hashOfConfig":"38"},{"size":748,"mtime":1611304813979,"results":"39","hashOfConfig":"38"},{"size":44,"mtime":1611304804386,"results":"40","hashOfConfig":"38"},{"size":522,"mtime":1611304813978,"results":"41","hashOfConfig":"38"},{"size":516,"mtime":1611304813977,"results":"42","hashOfConfig":"38"},{"size":1726,"mtime":1611304813978,"results":"43","hashOfConfig":"38"},{"size":456,"mtime":1611304813977,"results":"44","hashOfConfig":"38"},{"size":486,"mtime":1611305433463,"results":"45","hashOfConfig":"38"},{"size":945,"mtime":1611304804385,"results":"46","hashOfConfig":"38"},{"size":231,"mtime":1611304813977,"results":"47","hashOfConfig":"38"},{"size":327,"mtime":1611304804356,"results":"48","hashOfConfig":"38"},{"size":273,"mtime":1611304813973,"results":"49","hashOfConfig":"38"},{"size":574,"mtime":1611304813973,"results":"50","hashOfConfig":"38"},{"size":275,"mtime":1611304813973,"results":"51","hashOfConfig":"38"},{"size":1930,"mtime":1611304813973,"results":"52","hashOfConfig":"38"},{"size":393,"mtime":1611304804401,"results":"53","hashOfConfig":"38"},{"size":1183,"mtime":1611304813977,"results":"54","hashOfConfig":"38"},{"size":485,"mtime":1611304813976,"results":"55","hashOfConfig":"38"},{"size":441,"mtime":1611304804400,"results":"56","hashOfConfig":"38"},{"size":325,"mtime":1611304804402,"results":"57","hashOfConfig":"38"},{"size":57,"mtime":1611304804395,"results":"58","hashOfConfig":"38"},{"size":51,"mtime":1611304804392,"results":"59","hashOfConfig":"38"},{"size":64,"mtime":1611304804385,"results":"60","hashOfConfig":"38"},{"size":45,"mtime":1611304804394,"results":"61","hashOfConfig":"38"},{"size":369,"mtime":1611304804396,"results":"62","hashOfConfig":"38"},{"size":1255,"mtime":1611304813974,"results":"63","hashOfConfig":"38"},{"size":1108,"mtime":1611304804393,"results":"64","hashOfConfig":"38"},{"size":1975,"mtime":1611317912908,"results":"65","hashOfConfig":"38"},{"size":64,"mtime":1611304804390,"results":"66","hashOfConfig":"38"},{"size":61,"mtime":1611304804388,"results":"67","hashOfConfig":"38"},{"size":85,"mtime":1611304804397,"results":"68","hashOfConfig":"38"},{"size":64,"mtime":1611304813975,"results":"69","hashOfConfig":"38"},{"size":4010,"mtime":1611321296948,"results":"70","hashOfConfig":"38"},{"size":5585,"mtime":1611304813976,"results":"71","hashOfConfig":"38"},{"size":5282,"mtime":1611304813975,"results":"72","hashOfConfig":"38"},{"size":7619,"mtime":1611304813974,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"s56bto",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},"E:\\LF-Taxi\\lftaxi\\src\\index.jsx",[],["156","157"],"E:\\LF-Taxi\\lftaxi\\src\\store\\store.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\app\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\saga\\registrationSaga.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\saga\\authSaga.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\saga\\paymentSaga.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\saga\\addressSaga.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\saga\\routeSaga.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\app\\app.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\reducers\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\actions\\login.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\actions\\address.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\actions\\card.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\actions\\user.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\api\\api.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\reducers\\auth.jsx",["158"],"import {LOG_IN, LOG_OUT } from '../actions/login'\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LOG_IN : {\r\n            return {isLoggedIn: true}\r\n        }\r\n        case LOG_OUT : {\r\n            return {isLoggedIn: false}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\LF-Taxi\\lftaxi\\src\\reducers\\card.jsx",["159"],"import {registerCardStart, registerCardError,\r\n    setCardData, getCardDataStart, getCardDataError, setCardUpdated } from \"../actions/card\";\r\n\r\nconst initialState = {\r\n    cardNumber: '',\r\n    cardName: '',\r\n    cvc: '',\r\n    expiryDate: '',\r\n    error: null,\r\n    loading: false,\r\n    isUpdated: false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case getCardDataStart.toString(): {\r\n            return {...state, loading: true, error: null}\r\n        }\r\n        case setCardData.toString(): {\r\n            return {...state, ...action.payload, loading: false, error: null}\r\n        }\r\n        case getCardDataError.toString(): {\r\n            return {...state, loading: false, error: action.payload.error}\r\n        }\r\n        case registerCardStart.toString(): {\r\n            return {...state, loading: true, error: null}\r\n        }\r\n        case registerCardError.toString(): {\r\n            return {...state, loading: false, error: action.payload.error}\r\n        }\r\n        case setCardUpdated.toString(): {\r\n            return {...state, isUpdated: true}\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\LF-Taxi\\lftaxi\\src\\reducers\\addresses.jsx",["160"],"import {addRoute, addAddresses} from '../actions/address'\r\n\r\nconst initialState = {\r\n    listAddresses: null,\r\n    route: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case addAddresses.toString(): {\r\n            return {...state, listAddresses: action.payload}\r\n        }\r\n        case addRoute.toString(): {\r\n            return {...state, route: action.payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\LF-Taxi\\lftaxi\\src\\private-route.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\reducers\\user.jsx",["161"],"import {ADD_USER_CARD } from '../actions/user'\r\n\r\nconst initialState = {\r\n    userCard: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_USER_CARD : {\r\n            return {userCard: action.payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\LF-Taxi\\lftaxi\\src\\components\\profile\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\login\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\app-header\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\map\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\profile\\profile.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\app-header\\app-header.jsx",["162"],"import React from 'react';\r\nimport './app-header.css';\r\nimport logo from '../../assets/icon.png'\r\nimport {connect} from 'react-redux' \r\nimport {logOut} from '../../actions/login'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AppHeader = ( {logOut}) => {\r\n\r\n    const onExit = () => {\r\n        logOut();\r\n        localStorage.removeItem('token');\r\n    }\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"app-header\" >\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <div>\r\n                        <img className=\"header-logo\" src={logo}/>\r\n                    </div>\r\n\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => history.push('/map')}>Карта</button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => history.push('/profile')}>Профиль</button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={onExit}>Выйти</button>\r\n                    </div>\r\n                </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    {logOut}\r\n)(AppHeader);","E:\\LF-Taxi\\lftaxi\\src\\components\\login\\login.jsx",["163"],"import React, { useState } from 'react';\r\nimport LoginForm from '../login-form';\r\nimport './login.css';\r\nimport logo from '../../assets/icon-login.png'\r\nimport RegistrationForm from '../registration-form';\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [loginForm, setLoginForm] = useState(true);\r\n    const [registrationForm, setRegistrationForm] = useState(false);\r\n\r\n    const onRegistrationForm = () => {\r\n        setLoginForm(false);\r\n        setRegistrationForm(true);\r\n    }\r\n    \r\n    const onLoginForm = () => {\r\n        setLoginForm(true);\r\n        setRegistrationForm(false);\r\n    }\r\n\r\n        return (\r\n        <div className=\"login-container\">\r\n        <div className=\"login-flex\"> \r\n            <div className=\"login-logo-container\"  >\r\n                <img className=\"login-logo\" src={logo}/>\r\n            </div>\r\n            <div>\r\n            {loginForm && <LoginForm  onRegistrationForm={onRegistrationForm}/> }\r\n            {registrationForm && <RegistrationForm onLoginForm={onLoginForm}/> }                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Login;","E:\\LF-Taxi\\lftaxi\\src\\components\\map\\map.jsx",["164","165"],"E:\\LF-Taxi\\lftaxi\\src\\components\\login-form\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\card-form\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\registration-form\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\order-form\\index.jsx",[],"E:\\LF-Taxi\\lftaxi\\src\\components\\login-form\\login-form.jsx",["166"],"E:\\LF-Taxi\\lftaxi\\src\\components\\registration-form\\registration-form.jsx",["167"],"import React, {useState, useEffect}  from 'react';\r\nimport './registration-form.css';\r\nimport { Typography, Grid, TextField, makeStyles, Container, Button, Link } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux';\r\nimport {addUser} from './../../actions/user';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        width: '25%',\r\n    },\r\n    paper: {\r\n        padding: '40px'\r\n    }\r\n\r\n}));\r\n\r\nconst RegistrationForm = ({onLoginForm, addUser, isLoggedIn }) => {\r\n    RegistrationForm.propTypes = {\r\n        onLoginForm: PropTypes.func,\r\n    };\r\n\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(isLoggedIn)\r\n        {\r\n            history.push(\"/map\");\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n    const onNameChange = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n    const onSurnameChange = (e) => {\r\n        setSurname(e.target.value);\r\n    };\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        addUser({email, password, name, surname});\r\n        \r\n   }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Container component=\"main\" maxWidth=\"xs\" style={{ backgroundColor: \"white\" }}>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\">\r\n                        Регистрация\r\n                </Typography>\r\n                    <div className=\"registration-row\">\r\n                        <Typography component=\"p\" className=\"new-user\">\r\n                            Уже зарегистрированы?\r\n                    </Typography>\r\n                        <br />\r\n                        <Link href=\"#\" onClick={onLoginForm}>\r\n                            Войти\r\n                    </Link>\r\n                    </div>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Адрес электронной почты\"\r\n                                    fullWidth\r\n                                    autoComplete=\"email\"\r\n                                    onChange={onEmailChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"firstName\"\r\n                                    name=\"firstName\"\r\n                                    label=\"Имя \"\r\n                                    fullWidth\r\n                                    onChange={onNameChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField \r\n                                required\r\n                                id=\"lastName\" \r\n                                name=\"lastName\" \r\n                                label=\"Фамилия\" \r\n                                fullWidth\r\n                                onChange={onSurnameChange} \r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Пароль\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={onPasswordChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className={classes.buttons}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                                style={{ backgroundColor: \"orange\" }}\r\n                                onClick={onSubmit}\r\n                            >\r\n                                Войти\r\n                        </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nexport default connect(\r\n    (state) => ({isLoggedIn: state.auth.isLoggedIn }),\r\n    {addUser}\r\n)(RegistrationForm);","E:\\LF-Taxi\\lftaxi\\src\\components\\order-form\\order-form.jsx",["168","169","170"],"import React, {useState, useEffect} from 'react';\r\nimport './order-form.css';\r\nimport { FormControl, Grid, TextField, makeStyles, Container, Button, InputLabel, Select, MenuItem} from \"@material-ui/core\";\r\nimport {connect} from 'react-redux';\r\nimport {getAddresses, getRoute} from './../../actions/address';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        padding: '40px'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    },  \r\n\r\n}));\r\n\r\nconst OrderForm = ({getAddresses, getRoute, isLoggedIn, listAddresses}) => {\r\n\r\nlet history = useHistory();\r\n\r\nconst [startPoint, setStartPoint] = useState('')\r\nconst [destPoint, setDestPoint] = useState('')\r\nconst [startOpen, setStartOpen] = useState(false)\r\nconst [distOpen, setDistOpen] = useState(false)\r\n\r\nuseEffect(() => {    \r\n    getAddresses();\r\n\r\n}, [isLoggedIn])\r\n\r\n\r\nconst onStartPointChange = (e) => {\r\n    setStartPoint(e.target.value);\r\n  };\r\n\r\nconst onDestPointChange = (e) => {\r\n    setDestPoint(e.target.value);\r\n}\r\n\r\nconst handleStartClose = () => {\r\n    setStartOpen(false);\r\n  };\r\n\r\n  const handleStartOpen = () => {\r\n    setStartOpen(true);\r\n  };\r\n\r\nconst handleDistClose = () => {\r\n    setDistOpen(false);\r\n  };\r\n\r\n  const handleDistOpen = () => {\r\n    setDistOpen(true);\r\n  };\r\n\r\n\r\nconst onSubmit = (e) => {\r\n     e.preventDefault();\r\n    getRoute({startPoint, destPoint});\r\n}\r\n\r\nconst classes = useStyles();\r\nreturn (\r\n    <React.Fragment>\r\n        <Container component=\"main\" maxWidth=\"xl\" style={{backgroundColor:\"white\"}}>\r\n            <div className={classes.paper}>\r\n                <form name=\"login\" className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-controlled-open-select-label\">Откуда</InputLabel>\r\n                            {listAddresses !== null ? (\r\n                            <Select\r\n                                labelId=\"demo-controlled-open-select-label\"\r\n                                id=\"startPoint\"\r\n                                value={startPoint}\r\n                                open={startOpen}\r\n                                onClose={handleStartClose}\r\n                                onOpen={handleStartOpen}\r\n                                onChange={onStartPointChange}\r\n                            >                               \r\n                                {listAddresses.filter((name) => name !== destPoint).map((name) => (\r\n                                <MenuItem key={name} value={name}>\r\n                                    {name}\r\n                                </MenuItem>\r\n                                ))}\r\n\r\n                            </Select>) : null}\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-controlled-open-select-label\">Куда</InputLabel>\r\n                            {listAddresses !== null ? (\r\n                            <Select\r\n                                labelId=\"demo-controlled-open-select-label\"\r\n                                id=\"destPoint\"\r\n                                value={destPoint}\r\n                                open={distOpen}\r\n                                onClose={handleDistClose}\r\n                                onOpen={handleDistOpen}\r\n                                onChange={onDestPointChange}\r\n                            >\r\n                                {listAddresses.filter((name) => name !== startPoint).map((name) => (\r\n                                <MenuItem key={name} value={name}>\r\n                                    {name}\r\n                                </MenuItem>\r\n                                ))}\r\n\r\n                                </Select>) : null}\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className={classes.buttons}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            className={classes.submit}\r\n                            style={{backgroundColor:\"orange\"}}\r\n                            onClick={onSubmit}\r\n                        >\r\n                            Заказать\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    </React.Fragment>\r\n)\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        listAddresses: state.addresses.listAddresses,\r\n     }),\r\n    {getAddresses, getRoute}\r\n)(OrderForm);","E:\\LF-Taxi\\lftaxi\\src\\components\\card-form\\card-form.jsx",["171"],"import React, {useEffect, useState} from 'react';\r\nimport './card-form.css';\r\nimport { Typography, Grid, TextField, makeStyles, Container, Button} from \"@material-ui/core\";\r\nimport {connect} from 'react-redux';\r\nimport {registerCard, getCardData} from './../../actions/card';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        width: '25%',\r\n    },\r\n    mapButton: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        width: '35%',\r\n    },\r\n    paper: {\r\n        padding: '40px',\r\n\r\n    },\r\n    profile: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    pay: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    cardGridGroup: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    success: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n    \r\n\r\n}));\r\n\r\nconst CardForm = ({\r\n    registerCard, \r\n    getCardData, \r\n    cardName,\r\n    expiryDate,\r\n    cardNumber,\r\n    cvc,\r\n    loading,\r\n    error,\r\n    isUpdated\r\n}) => {\r\n\r\nlet history = useHistory();\r\n\r\nconst [formFields, setFormField] = useState({\r\n    cardNumber: \"\",\r\n    cardName: \"\",\r\n    expiryDate: new Date(),\r\n    cvc: \"\",\r\n})\r\n\r\nconst onChange = (e) => {\r\n    setFormField({\r\n        ...formFields,\r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\nconst onDateChange = (date) => {\r\n    setFormField({\r\n        ...formFields,\r\n        expiryDate: date\r\n    })\r\n}\r\n\r\nuseEffect (() => {\r\n    getCardData();\r\n    if(error === null){\r\n        setFormField({cardNumber, expiryDate, cardName, cvc})\r\n    }\r\n    \r\n}, [getCardData,cardNumber, expiryDate, cardName, cvc])\r\n\r\nconst onSubmit = (e) => {\r\n     e.preventDefault();\r\n     registerCard(formFields)\r\n\r\n}\r\n\r\nconst onMap = () => {\r\n    history.push('/map');\r\n}\r\n\r\nconst classes = useStyles();\r\nreturn (\r\n    <React.Fragment>\r\n        <Container component=\"main\" maxWidth=\"xl\" style={{backgroundColor:\"white\"}}>\r\n            <div className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <Typography component=\"h1\" variant=\"h4\">\r\n                        Профиль\r\n                    </Typography>\r\n                 </div>\r\n                <div className={classes.pay}>\r\n                    <Typography component=\"p\">\r\n                        Способ оплаты \r\n                    </Typography>\r\n                </div>\r\n                {loading ? (\r\n                    <Typography variant=\"body1\">Loading....</Typography>\r\n                ): null}\r\n                {error ? (\r\n                    <Typography color=\"error\">{error}</Typography>\r\n                ): null}\r\n                {!isUpdated ? (\r\n                <form name=\"login\" className={classes.form} noValidate>\r\n                    <div className={classes.cardGridGroup}>\r\n                    <Grid container spacing={2} xl={10}  >\r\n                        <Grid item >\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"cardNumber\"\r\n                                label=\"Номер карты\"\r\n                                value={formFields.cardNumber}               \r\n                                name=\"cardNumber\"\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xl={10}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker \r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Expire date\"\r\n                            name=\"Expire date\"\r\n                            views={[\"year\", \"month\"]}\r\n                            format=\"MM/yyyy\"\r\n                            value={formFields.expiryDate}\r\n                            onChange={onDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                         </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xl={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                value={formFields.cardName}\r\n                                id=\"cardName\"\r\n                                label=\"Имя владельца\"\r\n                                name=\"cardName\"\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xl={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                value={formFields.cvc}\r\n                                name=\"cvc\"\r\n                                label=\"CVC\"\r\n                                type=\"cvc\"\r\n                                id=\"cvc\"\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                    <div className={classes.buttons}>       \r\n                       <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            className={classes.submit}\r\n                            style={{backgroundColor:\"orange\"}}\r\n                            onClick={onSubmit}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </div>\r\n                </form>)\r\n                :\r\n                <div className={classes.success}>\r\n                    <p>Платёжные данные обновлены. Теперь вы можете заказывать такси.</p>\r\n                    <div className={classes.buttons}>       \r\n                       <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            className={classes.mapButton}\r\n                            style={{backgroundColor:\"orange\"}}\r\n                            onClick={onMap}\r\n                        >\r\n                            Перейти на карту\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                }\r\n                \r\n            </div>\r\n        </Container>\r\n    </React.Fragment>\r\n)\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        cardName: state.card.cardName,\r\n        expiryDate: state.card.expiryDate,\r\n        cardNumber: state.card.cardNumber,\r\n        cvc: state.card.cvc,\r\n        loading: state.card.loading,\r\n        error: state.card.error,\r\n        isUpdated: state.card.isUpdated\r\n         }),\r\n    {registerCard, getCardData}\r\n)(CardForm);",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":7,"column":1,"nodeType":"178","endLine":18,"endColumn":2},{"ruleId":"176","severity":1,"message":"177","line":14,"column":1,"nodeType":"178","endLine":38,"endColumn":2},{"ruleId":"176","severity":1,"message":"177","line":8,"column":1,"nodeType":"178","endLine":19,"endColumn":2},{"ruleId":"176","severity":1,"message":"177","line":7,"column":1,"nodeType":"178","endLine":15,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":20,"column":25,"nodeType":"181","endLine":20,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":28,"column":17,"nodeType":"181","endLine":28,"endColumn":57},{"ruleId":"182","severity":1,"message":"183","line":2,"column":19,"nodeType":"184","messageId":"185","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"187","line":14,"column":15,"nodeType":"188","endLine":19,"endColumn":11},{"ruleId":"186","severity":1,"message":"189","line":45,"column":4,"nodeType":"190","endLine":45,"endColumn":16,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"189","line":47,"column":8,"nodeType":"190","endLine":47,"endColumn":20,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"193","line":3,"column":29,"nodeType":"184","messageId":"185","endLine":3,"endColumn":38},{"ruleId":"182","severity":1,"message":"194","line":35,"column":5,"nodeType":"184","messageId":"185","endLine":35,"endColumn":12},{"ruleId":"186","severity":1,"message":"195","line":45,"column":4,"nodeType":"190","endLine":45,"endColumn":16,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":94,"column":4,"nodeType":"190","endLine":94,"endColumn":55,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'addLayer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'map' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["201"],["202"],"'TextField' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAddresses'. Either include it or remove the dependency array. If 'getAddresses' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["203"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"212","text":"213"},{"range":"214","text":"213"},"Update the dependencies array to be: [getAddresses, isLoggedIn]",{"range":"215","text":"216"},"Update the dependencies array to be: [getCardData, cardNumber, expiryDate, cardName, cvc, error]",{"range":"217","text":"218"},[1106,1118],"[history, isLoggedIn]",[1242,1254],[1185,1197],"[getAddresses, isLoggedIn]",[2071,2122],"[getCardData, cardNumber, expiryDate, cardName, cvc, error]"]